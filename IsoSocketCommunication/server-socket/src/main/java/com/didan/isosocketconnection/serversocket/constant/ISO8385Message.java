package com.didan.isosocketconnection.serversocket.constant;

import java.util.HashMap;
import java.util.Map;
import lombok.experimental.UtilityClass;

@UtilityClass
public class ISO8385Message {
public static final int MTI = 0;
    public static final int BIT_MAP = 1;
    public static final int CARD_NUMBER = 2;
    public static final int PROCESS_CODE = 3;
    public static final int TRANSACTION_AMOUNT = 4;
    public static final int CVV = 5;
    public static final int TRANSMISSION_DATETIME = 7;
    public static final int SYSTEM_TRACE_AUDIT_NUMBER = 11;
    public static final int TRANSMISSION_DATETIME_CHARGE = 14;
    public static final int PROVINCE_CODE = 19;
    public static final int CARD_CLOSED_CODE = 21;
    public static final int RECEIVED_MONEY_TYPE = 22;
    public static final int CARD_REOPEN_TYPE = 24;
    public static final int SERVICE_CODE = 25;
    public static final int ACCOUNT_CHECK_TYPE = 26;
    public static final int TELECOM_TYPE = 27;
    public static final int TRANSACTION_FEE = 28;
    public static final int OTHER_FEE = 29;
    public static final int AMOUNT_CHEQUE = 30;
    public static final int TELCO_CODE = 32;
    public static final int RM_MAIN = 33;
    public static final int RM_SUB = 34;
    public static final int MONEY_SOURCE_BANK_CODE = 35;
    public static final int MONEY_SOURCE_BANK_CODE_RECV = 36;
    public static final int REFERENCE_NUMBER = 37;
    public static final int ACCOUNT_TYPE = 38;
    public static final int RESPONSE_CODE = 39;
    public static final int SERVICE_INDICATOR = 40;
    public static final int MOBILE_NUMBER_RECEIVER = 44;
    public static final int MOBILE_CONTACT_NUMBER = 45;
    public static final int NAME_DISPLAY_ON_CARD = 46;
    public static final int PLACE_OF_BIRTH = 46;
    public static final int ISSUE_METHOD = 47;
    public static final int BIRTH_DAY = 48;
    public static final int CURRENCY_CODE = 49;
    public static final int TID_NUMBER = 50;
    public static final int AGENT_CODE = 51;
    public static final int AGENT_NAME = 52;
    public static final int CARD_SECURITY_CODE = 53;
    public static final int BALANCE = 54;
    public static final int REQUEST_ID = 55;
    public static final int CARD_STATUS = 56;
    public static final int CARD_LEVEL = 57;
    public static final int ACCOUNT_NAME = 58;
    public static final int CUSTOMER_NAME = 59;
    public static final int MOBILE_NUMBER = 60;
    public static final int CUSTOMER_GENDER = 61;
    public static final int PASSWORD_CURRENT = 62;
    public static final int OTP = 63;
    public static final int MESSAGE_SIGNATURE = 64;
    public static final int CUSTOMER_TYPE = 65;
    public static final int ID_TYPE = 66;
    public static final int MESSAGES_SIGNATURE = 64;
    public static final int IDTYPE = 66;
    public static final int CHANNEL_TYPE_ID = 69;
    public static final int EXPIRED_DATE = 72;
    public static final int INTERESTED_AMOUNT = 73;
    public static final int STATUS = 74;
    public static final int DEV_STAFF_CODE = 75;
    public static final int DEV_STAFF_NAME = 76;
    public static final int SAVING_DURATION = 77;
    public static final int TRANSACTION_TYPE = 80;
    public static final int FEE_SOURCE = 82;
    public static final int CREDIT_AMOUNT = 86;
    public static final int ADDITIONAL_DATA = 85;
    public static final int INTEREST_TYPE = 87;
    public static final int INTEREST_PERCENT = 88;
    public static final int CARD_REQUEST_TYPE = 89;
    public static final int BANK_TRANS_ID = 90;
    public static final int MOBILE_STATUS = 91;
    public static final int ORIGINAL_REQUEST_ID = 92;
    public static final int AGRIBANK_ORIGINAL_REQUEST_ID = 90;
    public static final int MOBILE_CONTACT = 93;
    public static final int PAYMENT_TYPE = 96;
    public static final int CARD_ISSUE_DATE = 97;
    public static final int PASSWORD_NEW = 101;
    public static final int ACCOUNT_NUMBER = 102;
    public static final int CREDIT_CARD_NUMBER = 103;
    public static final int IDENTITY_CARD_NUMBER = 104;
    public static final int EMAIL_ADDRESS = 105;
    public static final int IDENTITY_CARD_NUMBER_RECEIVER = 106;
    public static final int CARD_SERIAL_NUMBER = 108;
    public static final int DATE_OF_ISSUE = 109;
    public static final int PLACE_OF_ISSUE = 110;
    public static final int CUSTOMER_ADDRESS = 111;
    public static final int MINI_STATEMENT_DATA = 112;
    public static final int ACCOUNT_LIST = 113;
    public static final int ATM_LOCATION = 114;
    public static final int ATM_TERMINAL_ID_CODE = 115;
    public static final int BANK_NAME = 116;
    public static final int CONTENT_DESCRIPTION_CHAQUE_FEE = 119;
    public static final int VT_SHOP_NAME = 117;
    public static final int BILLING_CODE = 119;
    public static final int CUSTOMER_SIGNATURE = 120;
    public static final int CUSTOMER_CODE = 121;
    public static final int BENEFICARY_NAME = 122;
    public static final int BENEFICIARY_BANK_CODE = 123;
    public static final int CONTENT_DESCRIPTION_SERVICE = 124;
    public static final int RECEIVED_CODE = 125;
    public static final int SIGNATURE_URL = 126;
    public static final int BENEFICIARY_BANK_BRANCH_NAME = 127;
    public static final int IS_IDENTIFY = 8;
    public static final int PIN_STATUS = 9;
    private static final Map<String, String> hasErrorCode = new HashMap<>();
    private static final String MESSAGE_TIMEOUT = "Giao dịch bị timeout";

    static {
        hasErrorCode.put("00", "Giao dịch thành công");
        hasErrorCode.put("01", "Thẻ đã được định danh");
        hasErrorCode.put("02", "Thẻ chưa được kích hoạt xuất bán");
        hasErrorCode.put("03", "Thẻ đã được kích hoạt xuất bán");
        hasErrorCode.put("04", "Thẻ đang ở trạng thái không thể khóa");
        hasErrorCode.put("05", "Thẻ đã được kích hoạt");
        hasErrorCode.put("06", "Thẻ vô danh đã nạp tiền");
        hasErrorCode.put("07", "Thẻ chưa được kích hoạt");
        hasErrorCode.put("08", "Giao dịch không thỏa mãn tiêu chí để hoàn tiền");
        hasErrorCode.put("09", "Giao dịch thẻ không hợp lệ");
        hasErrorCode.put("10", "Thẻ đã được đăng ký trước đó");
        hasErrorCode.put("11", "Số mobile đã được đăng ký trước đó");
        hasErrorCode.put("12", "Số tài khoản không hợp lệ");
        hasErrorCode.put("13", "Khách hàng không tồn tại trong core MB");
        hasErrorCode.put("14", "Thông tin thẻ/ tài khoản nhận tiền không hợp lệ, vui lòng kiểm tra lại hoặc liên hệ 18009000 để được hỗ trợ.");
        hasErrorCode.put("15", "Sai thông tin khách hàng");
        hasErrorCode.put("16", "Số dư tài khoản khách hàng không đủ để giao dịch");
        hasErrorCode.put("22", "Sai OTP");
        hasErrorCode.put("23", "Không lấy được thông tin tên chủ thẻ");
        hasErrorCode.put("25", "Số điện thoại và tài khoản không khớp");
        hasErrorCode.put("26", "Tài khoản mobile chưa đươc kích hoạt");
        hasErrorCode.put("27", "Sai mã công ty gửi yêu cầu");
        hasErrorCode.put("28", "Duplicate giao dịch");
        hasErrorCode.put("29", "Mất kết nối với core bank");
        hasErrorCode.put("30", "Hệ thống tạm ngừng phục vụ");
        hasErrorCode.put("31", "Ngân hàng thụ hưởng chưa tham gia dịch vụ");
        hasErrorCode.put("32", "Giao dịch Time out");
        hasErrorCode.put("33", "Sai mã pin sinh OTP");
        hasErrorCode.put("34", "OTP đã quá hạn sử dụng");
        hasErrorCode.put("35", "Không cho phép revesal");
        hasErrorCode.put("36", "Khách hàng đã có tài khoản trước đó");
        hasErrorCode.put("37", "Khách hàng giao dịch vượt hạn mức số lần/ngày");
        hasErrorCode.put("38", "Khách hàng giao dịch vượt hạn mức số tiền/lần");
        hasErrorCode.put("39", "Sai mã ngân hàng liên kết chuyển đến(chuyển khoản tới tk ngoài MB)");
        hasErrorCode.put("40", "Số tiền không đúng định dạng");
        hasErrorCode.put("41", "Số tiền cược tài khoản tổng VT không đủ thanh toán");
        hasErrorCode.put("42", "Chuyển tiền sang liên ngân hàng không thành công");
        hasErrorCode.put("43", "Mật khẩu cũ trùng mật khẩu mới");
        hasErrorCode.put("44", "Số điện thoại không hợp lệ");
        hasErrorCode.put("45", "Khách hàng đã hủy dịch vụ");
        hasErrorCode.put("46", "Tài khoản đã được đăng ký dịch vụ mobile BankPlus");
        hasErrorCode.put("47", "Tài khoản đã được phát hành thẻ");
        hasErrorCode.put("48", "Loại phí không tồn tại");
        hasErrorCode.put("49", "Tài khoản người gửi trùng tài khoản người nhận");
        hasErrorCode.put("50", "Số tiền trên thẻ không đủ để thực hiện giao dịch");
        hasErrorCode.put("51", "Số điện thoại người thụ hưởng chưa đăng ký dịch vụ");
        hasErrorCode.put("52", "Giao dịch vượt hạn mức số tiền/ngày");
        hasErrorCode.put("53", "User bị lock do nhập sai OTP 3 lần");
        hasErrorCode.put("54", "Số tiền giao dịch quá nhỏ");
        hasErrorCode.put("55", "PIN card không hợp lệ");
        hasErrorCode.put("56", "Số chứng minh không khớp với số tài khoản");
        hasErrorCode.put("57", "Thẻ đã được phát hành trong hệ thống");
        hasErrorCode.put("58", "Số Serial và số thẻ không khớp");
        hasErrorCode.put("59", "Dịch vụ VTBANK của khách hàng đã bị khoá do nhập sai PIN quá n lần(n=3)");
        hasErrorCode.put("60", "Không tìm thấy thông tin giao dịch trước đó");
        hasErrorCode.put("61", "Vượt hạn mức giao dịch trên thẻ");
        hasErrorCode.put("63", "Không tìm thấy thông tin định danh thẻ");
        hasErrorCode.put("69", "So thue bao da duoc khuyen mai truoc do");
        hasErrorCode.put("70", "Giao dịch chuyển tiền đã được xử lý trước đó");
        hasErrorCode.put("71", "Giao dịch chứa các ký tự đặc biệt");
        hasErrorCode.put("72", "Thông điệp không đúng định dạng hoặc thiếu trường bắt buộc (Message Type, Client ID, Process Code)");
        hasErrorCode.put("73", "Mã dịch vụ yêu cầu không tồn tại.");
        hasErrorCode.put("74", "Mã số dịch vụ thẻ không chính xác");
        hasErrorCode.put("75", "Thẻ bị khóa do nhập PIN sai quá số lần cho phép");
        hasErrorCode.put("76", "Mệnh giá tiền không phù hợp");
        hasErrorCode.put("77", "Số điện thoại chưa được đăng ký với số thẻ");
        hasErrorCode.put("78", "Số điện thoại không đúng với số điện thoại đã được đăng ký");
        hasErrorCode.put("79", "Thẻ hết hạn sử dụng");
        hasErrorCode.put("80", "Thẻ không được phép thực hiện giao dịch");
        hasErrorCode.put("81", "Thực hiện giao dịch trên hệ thống thẻ không thành công");
        hasErrorCode.put("82", "Giao dịch không được phép thực hiện trên hệ thống thẻ");
        hasErrorCode.put("84", "Sai thông tin người nhận(dùng cho chuyển tiền ngoài hệ thống: sai tên, sai tài khoản, sai Ngân hàng ?)");
        hasErrorCode.put("85", "Không tìm thấy Processor xử lý dịch vụ.");
        hasErrorCode.put("89", "Giao dịch chưa được cấu hình hạn mức");
        hasErrorCode.put("90", "Giao dịch chuyển tiền CMND đang được xử lý bởi 1 giao dịch khác đồng thời");
        hasErrorCode.put("91", "Giao dich khong thanh cong. Ngân hàng không tìm thấy process xử lý dịch vụ");
        hasErrorCode.put("93", "Giao dịch đang  được xử lý tại ngân hàng, quý khách vui lòng kiểm tra với người nhận");
        hasErrorCode.put("95", "Giao dịch chưa được xử lý, do hệ thống MB đang quá tải");
        hasErrorCode.put("96", "Không kết nối được đến hệ thống thẻ");
        hasErrorCode.put("97", "Các mã lỗi phát sinh ngoài danh mục mã lỗi thẻ mô tả");
        hasErrorCode.put("98", "Format bản tin không đúng, hệ thống MB không xử lý được giao dịch");
        hasErrorCode.put("99", "Các lỗi phát sinh ngoài danh mục mã lỗi mô tả");
        hasErrorCode.put("100", "RM ban chinh khong ton tai");
        hasErrorCode.put("101", "RM ban cheo khong ton tai");
        hasErrorCode.put("102", "RM ban chinh khong thuoc chi nhanh");
        hasErrorCode.put("103", "Không tồn tại mã cửa hàng");
        hasErrorCode.put("104", "Khach hang da co khoan vay tin dung");
        hasErrorCode.put("105", "Không lấy được thông tin khoản vay");
        hasErrorCode.put("106", "Khach hang chua dang ky dich vu thanh toan tu dong");
        hasErrorCode.put("108", "Thong tin dang ky khong hop le");
        hasErrorCode.put("109", "Đã đăng ký thanh toán tự động");
        hasErrorCode.put("110", "Tài khoản truyền vào không tồn tại trên Core MB");
        hasErrorCode.put("111", "Mã KH của TK không trùng với mã KH mở T24 theo CMND");
        hasErrorCode.put("119", "Sai đầu BIN thẻ");
        hasErrorCode.put("120", "Thông tin thẻ không hợp lệ, liên hệ với đơn vị phát hành thẻ");
        hasErrorCode.put("124", "Tài khoản thanh toán của KH chưa đăng ký dịch vụ SMS Banking");
        hasErrorCode.put("126", "Thong tin dang ky khong hop le");
        hasErrorCode.put("169", "Ngan hang thu huong dang nang cap");
        hasErrorCode.put("199", "Thông tin tài khoản nguồn không hợp lệ");
        hasErrorCode.put("200", "Nguồn tiền đã tồn tại");
        hasErrorCode.put("201", "Nguồn tiền đã được cấu hình trước đó");
        hasErrorCode.put("203", "Lỗi khi thêm mới nguồn tiền");
        hasErrorCode.put("204", "Đăng ký khách hàng lỗi");
        hasErrorCode.put("205", "Cập nhật thông tin khách hàng lỗi");
        hasErrorCode.put("206", "Cập nhật thông tin nguồn tiền lỗi");
        hasErrorCode.put("208", "Không lưu được thông tin chuyển tiền CMND gốc");
        hasErrorCode.put("209", "Không cập nhật được thông tin chuyển tiền CMND gốc");
        hasErrorCode.put("210", "Khách hàng chưa có thông tin thẻ");
        hasErrorCode.put("211", "So SMND khong khop voi thong tin chu the");
        hasErrorCode.put("254", "The BMC cua KH khong ton tai o MB");
        hasErrorCode.put("255", "Sai mã khách hàng thẻ học đường");
        hasErrorCode.put("256", "KH dang su dung dich vu VBS, khong su dung ban tin dang ky vi Migrate");
        hasErrorCode.put("257", "Nguồn tiền không tồn tại");
        hasErrorCode.put("258", "SAI MA SSCID");
        hasErrorCode.put("259", "Khách hàng không nợ học phí");
        hasErrorCode.put("260", "Thanh toán thẻ học đường không thành công");
        hasErrorCode.put("261", "SAI TONG SO TIEN");
        hasErrorCode.put("262", "KH đã thanh toán");
        hasErrorCode.put("273", "Sai OTP xac thuc luong nap tien tu the ATM MB vao VTPAY");
        hasErrorCode.put("291", "Timeout - không được cộng tiền");
        hasErrorCode.put("292", "Timeout - không bị trừ tiền");
        hasErrorCode.put("293", "Revert thất bại cho Giao dịch trừ tiền chi lương");
        hasErrorCode.put("303", "Khoan vay tin dung khong the xac dinh. Vui long thu lai sau.");
        hasErrorCode.put("321", "Không thể hủy dịch vụ vì đang tồn tại liên kết tài khoản ePass");
        hasErrorCode.put("400", "sourceMobile Source mobile is invalid");
        hasErrorCode.put("604", "Thất bại sau đối soát");
        hasErrorCode.put("605", "Giao dich timeout");
        hasErrorCode.put("D02", "Đã phát hành thẻ trước đó.");
        hasErrorCode.put("D05", "Thẻ đã kích hoạt trước đó");
        hasErrorCode.put("D06", "4 số cuối không hợp lệ");
    }

    public static String getMessage(String code) {
        return hasErrorCode.get(code);
    }
}
